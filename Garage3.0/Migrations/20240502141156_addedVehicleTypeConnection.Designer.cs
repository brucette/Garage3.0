// <auto-generated />
using System;
using Garage3._0.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Garage3._0.Migrations
{
    [DbContext(typeof(Garage3_0Context))]
    [Migration("20240502141156_addedVehicleTypeConnection")]
    partial class addedVehicleTypeConnection
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Garage3._0.Entites.Member", b =>
                {
                    b.Property<string>("PersonNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Membership")
                        .HasColumnType("bit");

                    b.HasKey("PersonNumber");

                    b.ToTable("Member");
                });

            modelBuilder.Entity("Garage3._0.Entites.Ownership", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("MemberPersonNumber")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("PersonNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ReceiptId")
                        .HasColumnType("int");

                    b.Property<string>("RegisterNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("MemberPersonNumber");

                    b.HasIndex("ReceiptId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Ownership");
                });

            modelBuilder.Entity("Garage3._0.Entites.Receipt", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CheckoutTime")
                        .HasColumnType("datetime2");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<TimeSpan?>("TotalParkingTime")
                        .HasColumnType("time");

                    b.HasKey("Id");

                    b.ToTable("Receipt");
                });

            modelBuilder.Entity("Garage3._0.Entites.Vehicle", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Brand")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ModelType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("MyProperty")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Vehicle");
                });

            modelBuilder.Entity("Garage3._0.Entites.VehicleType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("NumWheels")
                        .HasColumnType("int");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("VehicleId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("VehicleId")
                        .IsUnique();

                    b.ToTable("VehicleType");
                });

            modelBuilder.Entity("Garage3._0.Entites.Ownership", b =>
                {
                    b.HasOne("Garage3._0.Entites.Member", "Member")
                        .WithMany("Ownerships")
                        .HasForeignKey("MemberPersonNumber");

                    b.HasOne("Garage3._0.Entites.Receipt", "Receipt")
                        .WithMany("Ownerships")
                        .HasForeignKey("ReceiptId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Garage3._0.Entites.Vehicle", "Vehicle")
                        .WithMany("Ownerships")
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Member");

                    b.Navigation("Receipt");

                    b.Navigation("Vehicle");
                });

            modelBuilder.Entity("Garage3._0.Entites.VehicleType", b =>
                {
                    b.HasOne("Garage3._0.Entites.Vehicle", "Vehicles")
                        .WithOne("VehicleType")
                        .HasForeignKey("Garage3._0.Entites.VehicleType", "VehicleId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Vehicles");
                });

            modelBuilder.Entity("Garage3._0.Entites.Member", b =>
                {
                    b.Navigation("Ownerships");
                });

            modelBuilder.Entity("Garage3._0.Entites.Receipt", b =>
                {
                    b.Navigation("Ownerships");
                });

            modelBuilder.Entity("Garage3._0.Entites.Vehicle", b =>
                {
                    b.Navigation("Ownerships");

                    b.Navigation("VehicleType")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
